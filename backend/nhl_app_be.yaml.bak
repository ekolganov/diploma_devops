apiVersion: apps/v1
kind: Deployment
metadata:
  name: nhl-app-be-deployment
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: nhl-app-be
        image: karamel32/nhl_app_be:0.0.2
        imagePullPolicy: Always 
        ports:
        - containerPort: 5000
        env:
          - name: ENV_POSTGRES_DB
            valueFrom:
              scretKeyRef:
                name: be-secret
                key: env_postgres_db_prod
          - name: ENV_POSTGRES_USER
            valueFrom:
              scretKeyRef:
                name: be-secret
                key: env_postgres_user
          - name: ENV_POSTGRES_PASSWORD
            valueFrom:
              scretKeyRef:
                name: be-secret
                key: env_postgres_password
          - name: ENV_POSTGRES_HOST
            valueFrom:
              scretKeyRef:
                name: be-secret
                key: env_postgres_host
          - name: ENV_APP_FLASK
            valueFrom:
              configMapKeyRef:
                name: be-configmap
                key: env_app_flask
---
apiVersion: v1
kind: Service
metadata:
  name: nhl-app-be-svc
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
      app: backend
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nhl-app-be-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /nhl_app_be
        pathType: ImplementationSpecific
        backend:
          service:
            name: nhl-app-be-svc
            port:
              number: 5000
